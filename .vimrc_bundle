" setting
set modelines=3
set nocompatible
set backspace=2

" Don't write backup file if vim is being called by "crontab -e"
au BufWrite /private/tmp/crontab.* set nowritebackup nobackup
" Don't write backup file if vim is being called by "chpass"
au BufWrite /private/etc/pw.* set nowritebackup nobackup
set number
set incsearch
set term=xterm-256color
set title
set list
set listchars=tab:»-,trail:-,eol:↲,extends:»,precedes:«,nbsp:%
set virtualedit=block
set whichwrap=b,s,[,],<,>
set backspace=indent,eol,start
set hidden
set tabstop=2
set shiftwidth=2
set noautoindent
set nosmartindent

syntax on
let loaded_matchparen = 1
"colorscheme mine

hi Pmenu ctermbg=255 ctermfg=0 guifg=#000000 guibg=#999999
hi PmenuSel ctermbg=blue ctermfg=black
hi PmenuSbar ctermbg=0 ctermfg=9
hi PmenuSbar ctermbg=255 ctermfg=0 guifg=#000000 guibg=#FFFFFF

"=====================
"NeoBundle setting
"=====================
set nocompatible
filetype off            " for NeoBundle

if has('vim_starting')
	        set rtp+=~/.vim/bundle/neobundle.vim/
	endif
	call neobundle#begin(expand('~/.vim/bundle'))
	NeoBundleFetch 'Shougo/neobundle.vim'

  " NeoBundle で管理するプラグインを追加します。
  NeoBundle 'Shougo/neocomplcache.git'
  NeoBundle 'Shougo/unite.vim.git'
  NeoBundle 'scrooloose/nerdtree'
  NeoBundle 'Shougo/neocomplcache'
  NeoBundle 'tomtom/tcomment_vim'
  NeoBundle 'fatih/vim-go'

  call neobundle#end()

  filetype plugin indent on

"=====================
"setting end
"=====================


"=====================
"key map
"=====================

nnoremap <silent><C-e> :NERDTreeToggle<CR>

"=====================
"neocomplcache setting
"=====================
" 起動時に有効化
let g:neocomplcache_enable_at_startup = 1
" アンダーバー
let g:neocomplcache_enable_underbar_completion = 1
"snippet ファイルの保存先
let g:neocomplcache_snippets_dir='~/.vim/snippets'
"dictionary
let g:neocomplcache_dictionary_filetype_lists = {
    \ 'default' : '',
    \ 'objc' : $HOME . '/.vim/dict/objc.dict'
    \ }

inoremap <expr><CR>  pumvisible() ? neocomplcache#close_popup() : "<CR>"
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
